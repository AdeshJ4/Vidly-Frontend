HTML Web Storage API


-> HTML web storage; better than cookies.
-> With web storage, web applications can store data locally within the user's browser.
-> Before HTML5, application data had to be stored in cookies, included in every server request. 
-> Web storage is more secure, and large amounts of data can be stored locally, without affecting website performance.
-> Unlike cookies, the storage limit is far larger (at least 5MB) and information is never transferred to the server
-> All pages, from one origin, can store and access the same data.

HTML web storage provides two objects for storing data on the client:

1. window.localStorage - stores data with no expiration date
2. window.sessionStorage - stores data for one session (data is lost when the browser tab is closed)

-> Both, localStorage and sessionStorage are mechanisms of Web Storage API.
-> The data is stored in an 'SQLite file' in a subfolder in user's profile

Check browser support for localStorage and sessionStorage:
if (typeof(Storage) !== "undefined") {
  // Code for localStorage/sessionStorage.
} else {
  // Sorry! No Web Storage support..
}



The localStorage Object:
-> The localStorage object stores the data with no expiration date
-> The data will not be deleted when the browser is closed, and will be available the next day, week, or year.
-> localStorage can only store strings
-> No data protection is assured by the browser hence dont store sensitive information.
-> Size of localStorage is 5MB and localStorage operations are synchronous.

localStorage can be used with 5 methods:

1. setItem():
===============
Allows you to store values in the localStorage object; accepts 2 parameters: a key, a value.
code> window.localStorage.setItem('username' 'CodewithSloba');
Key can be referenced later to fetch value attached to it.

In case of arrays or objects, you have to first convert them into strings using JSON.stringify()
As localStorage can only store strings.
const creds = { username = "CodewithSloba", pw = "followForMore" }
window.localStorage.setItem('login', JSON.stringify(creds));


2 getItem():
============
Allows you to access the data stored in localStorage.
Simply pass key as the parameter and it will return value accordingly.
window.localStorage.getItem('login');
// {"username":"CodewithSloba","pw":"followForMore"}
Use JSON.parse() to convert it back to object.
JSON.parse(window.localStorage.getItem('login'));

3. removeItem()
===============
Allows you to remove the data stored in localStorage.
Simply pass key as the parameter and it will remove both, the key and value.
(Does nothing when parameter is left empty)
code> window.localStorage.removeItem('login');

4. clear():
==========
Deletes All item in the localStorage.
code> window.localStorage.clear();

5. key():
=========
Allows you to loop through the keys and pass an index as the parameter to retrieve the name of the key.
code> var keyName = window.localStorage.key(index);























